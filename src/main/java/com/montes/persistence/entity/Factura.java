package com.montes.persistence.entity;
// Generated 02-12-2017 09:08:33 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Facturas generated by hbm2java
 */
@Entity
@Table(name="facturas", catalog="si_factura")
public class Factura  implements java.io.Serializable {


     private Integer id;
     private User user;
     private Integer nro;
     private String nit;
     private String nombre;
     private Date fecha;
     private Double totalNum;
     private String totalLit;
     private Date createdAt;
     private Date updatedAt;
     private Set<Detalle> detalles = new HashSet<Detalle>(0);

    public Factura() {
    }

	
    public Factura(User user) {
        this.user = user;
    }
    public Factura(User user, Integer nro, String nit, String nombre, Date fecha, Double totalNum, String totalLit, Date createdAt, Date updatedAt, Set detalles) {
       this.user = user;
       this.nro = nro;
       this.nit = nit;
       this.nombre = nombre;
       this.fecha = fecha;
       this.totalNum = totalNum;
       this.totalLit = totalLit;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.detalles = detalles;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="nro")
    public Integer getNro() {
        return this.nro;
    }
    
    public void setNro(Integer nro) {
        this.nro = nro;
    }

    
    @Column(name="nit", length=50)
    public String getNit() {
        return this.nit;
    }
    
    public void setNit(String nit) {
        this.nit = nit;
    }

    
    @Column(name="nombre", length=100)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha", length=19)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    
    @Column(name="total_num", precision=8)
    public Double getTotalNum() {
        return this.totalNum;
    }
    
    public void setTotalNum(Double totalNum) {
        this.totalNum = totalNum;
    }

    
    @Column(name="total_lit", length=100)
    public String getTotalLit() {
        return this.totalLit;
    }
    
    public void setTotalLit(String totalLit) {
        this.totalLit = totalLit;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", length=19)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="factura", cascade = CascadeType.ALL)
    public Set<Detalle> getDetalles() {
        return this.detalles;
    }
    
    public void setDetalles(Set<Detalle> detalles) {
        this.detalles = detalles;
    }
}


